//
//  XDTAs99Symbols.h
//  XDTools99
//
//  Created by Henrik Wedekind on 04.12.16.
//
//  XDTools99.framework a collection of Objective-C wrapper for xdt99
//  Copyright Â© 2016-2019 Henrik Wedekind (aka hackmac). All rights reserved.
//
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as
//  published by the Free Software Foundation; either version 2.1 of the
//  License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this program; if not, see <http://www.gnu.org/licenses/>
//

#import <XDTObject.h>


typedef NS_ENUM(NSUInteger, XDTAs99SymbolTrackingInfo) {
    XDTAs99SymbolTrackingInfoNoTracking,
    XDTAs99SymbolTrackingInfoUnused,
    XDTAs99SymbolTrackingInfoNotUnused,
};


NS_ASSUME_NONNULL_BEGIN

@interface XDTAs99SymbolEntry : NSObject

@property (readonly) NSInteger value;
@property (readonly, getter=isWeak) BOOL weak;         // Weak symbols may be redefined if they have the same value.
@property (readonly) XDTAs99SymbolTrackingInfo trackingInfo;

@end


@interface XDTAs99Symbols : XDTObject

+ (nullable instancetype)symbolsWithPythonInstance:(PyObject *)object;

@property (nullable, readonly, copy) NSDictionary<NSString *, XDTAs99SymbolEntry *> *symbols;   // Values for keys are tripel: symbols[name] = (value, weak, tracking info)
@property (nullable, readonly, copy) NSDictionary<NSString *, NSNumber *> *extSymbols;
@property (nullable, readonly, copy) NSArray<NSString *> *symbolNames;
@property (nullable, readonly, copy) NSArray<NSString *> *unusedSymbolNames;
@property (nullable, readonly, copy) NSArray<NSString *> *refdefs;
@property (nullable, readonly, copy) NSDictionary<NSString *, NSNumber *> *xops;
@property (nullable, readonly, copy) NSDictionary<NSString *, NSNumber *> *locations;
@property (nullable, readonly, copy) NSArray<NSArray *> *autoGeneratedConstants;   // Array of tuple of (value, size)

- (void)resetLineCounter;
- (NSUInteger)effectiveLineCounter;

- (BOOL)addSymbolValue:(NSInteger)value forName:(NSString *)name;
- (BOOL)addSymbol:(XDTAs99SymbolEntry *)symbolEntry forName:(NSString *)name;

- (BOOL)addLineIndex:(NSUInteger)lineIdx forLabel:(NSString *)label;
- (BOOL)addLineIndex:(NSUInteger)lineIdx forLabel:(NSString *)label usingEffectiveLineCount:(BOOL)realLineCount tracked:(BOOL)tracked;
- (BOOL)addLineIndex:(NSUInteger)lineIdx forLocalLabel:(NSString *)label;

- (BOOL)addDef:(NSString *)name;
- (BOOL)addRef:(NSString *)name;
- (BOOL)addXop:(NSString *)name usingMode:(NSUInteger)mode;

- (NSInteger)getSymbol:(NSString *)name;
- (NSInteger)getLocal:(NSString *)name position:(NSUInteger)lpos distance:(NSUInteger)distance;

@end

NS_ASSUME_NONNULL_END
